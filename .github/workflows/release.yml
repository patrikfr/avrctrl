on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Package and Build Release Asset Native Image

jobs:
  build:
    name: Build GraalVM Native Image
    runs-on: macos-11.0

    steps:
      - uses: actions/checkout@v2
      - name: 'Get Version Number, strip "v" prefix'
        env:
          TAG: ${{ github.ref }}
        run: echo "VERSION=${$TAG:1} " >> $GITHUB_ENV"
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Build with Maven
        run: mvn -B package --file pom.xml
      - name: Install Graal VM
        uses: ayltai/setup-graalvm@v1
        with:
          java-version: 11
          graalvm-version: 20.2.0
          native-image: true
      - name: Buil dnative image
        run: native-image --no-server --no-fallback -jar target/avr-ctrl-${{ env.VERSION }}.jar avrctrl
      - name: Upload binary
        uses: actions/upload-artifact@v2
        with:
          name: avrctrl-macos-binary
          path: avrctrl

  release:
    name: Build GraalVM Native Image
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Create Release
        id: create-release
#        uses: actions/create-release@v1
        run: echo '::debug::Release pending'

#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      with:
#        tag_name: ${{ github.ref }}
#        release_name: Release ${{ github.ref }}
#        draft: false
#        prerelease: false
#
#    - name: Upload Release Asset
#      id: upload-release-asset
#      uses: actions/upload-release-asset@v1
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      with:
#        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
#        asset_path: ../cargo-routing-exercise-java.zip
#        asset_name: cargo-routing-exercise-java.zip
#        asset_content_type: application/zip